/*
 * ***************************************************************************
 *   Copyright 2014-2019 Spectra Logic Corporation. All Rights Reserved.
 *   Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 *   this file except in compliance with the License. A copy of the License is located at
 *  
 *   http://www.apache.org/licenses/LICENSE-2.0
 *  
 *   or in the "license" file accompanying this file.
 *   This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 *   CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *   specific language governing permissions and limitations under the License.
 * ***************************************************************************
 */

import java.nio.file.Files
import java.nio.file.Path

apply plugin: 'application'
apply plugin: 'kotlin'

mainClassName = 'com.spectralogic.ds3cli.Main'

dependencies {
    compile (
      [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0'],
      [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.0'],
      [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'],
      [group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.9.0']

    )
    compile 'commons-cli:commons-cli:1.4'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'
    compile 'joda-time:joda-time:2.9.9'
    compile fileTree(dir: 'lib', include: '*.jar')
}

task genConfigProperties {
    doLast {
        File configFile = new File(sourceSets.main.output.resourcesDir, "/ds3_cli.properties")
        Path configPath = sourceSets.main.output.resourcesDir.toPath()
        if (!Files.exists(configPath)) {
            Files.createDirectories(configPath)
        }

        configFile.withWriter{out ->
            out.writeLine("version="+version)
            out.writeLine("build.date="+new Date().toString())
        }
    }
}

jar.dependsOn genConfigProperties

run {
    if(project.hasProperty('args')){
        args project.args.split('\\s')
    }
}
